#version 150

uniform sampler2D Sampler0;

in vec4 vertexColor;
in vec2 texCoord0;

out vec4 fragColor;

// 17x17 Gaussian kernel weights (289 samples)
const float weights[289] = float[](
    0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,
    0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,
    0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0001,0.0001,0.0001,0.0001,0.0001,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,
    0.0000,0.0000,0.0000,0.0000,0.0001,0.0002,0.0003,0.0004,0.0005,0.0004,0.0003,0.0002,0.0001,0.0000,0.0000,0.0000,0.0000,
    0.0000,0.0000,0.0000,0.0001,0.0003,0.0006,0.0011,0.0016,0.0018,0.0016,0.0011,0.0006,0.0003,0.0001,0.0000,0.0000,0.0000,
    0.0000,0.0000,0.0000,0.0002,0.0006,0.0018,0.0043,0.0079,0.0115,0.0129,0.0115,0.0079,0.0043,0.0018,0.0006,0.0002,0.0000,
    0.0000,0.0000,0.0001,0.0003,0.0011,0.0034,0.0079,0.0146,0.0211,0.0239,0.0211,0.0146,0.0079,0.0034,0.0011,0.0003,0.0001,
    0.0000,0.0000,0.0001,0.0004,0.0016,0.0049,0.0115,0.0211,0.0305,0.0345,0.0305,0.0211,0.0115,0.0049,0.0016,0.0004,0.0001,
    0.0000,0.0000,0.0001,0.0005,0.0018,0.0055,0.0129,0.0239,0.0345,0.0390,0.0345,0.0239,0.0129,0.0055,0.0018,0.0005,0.0001,
    0.0000,0.0000,0.0001,0.0004,0.0016,0.0049,0.0115,0.0211,0.0305,0.0345,0.0305,0.0211,0.0115,0.0049,0.0016,0.0004,0.0001,
    0.0000,0.0000,0.0001,0.0003,0.0011,0.0034,0.0079,0.0146,0.0211,0.0239,0.0211,0.0146,0.0079,0.0034,0.0011,0.0003,0.0001,
    0.0000,0.0000,0.0000,0.0002,0.0006,0.0018,0.0043,0.0079,0.0115,0.0129,0.0115,0.0079,0.0043,0.0018,0.0006,0.0002,0.0000,
    0.0000,0.0000,0.0000,0.0001,0.0003,0.0006,0.0011,0.0016,0.0018,0.0016,0.0011,0.0006,0.0003,0.0001,0.0000,0.0000,0.0000,
    0.0000,0.0000,0.0000,0.0000,0.0001,0.0002,0.0003,0.0004,0.0005,0.0004,0.0003,0.0002,0.0001,0.0000,0.0000,0.0000,0.0000,
    0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0001,0.0001,0.0001,0.0001,0.0001,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,
    0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,
    0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000
);

void main() {
    vec2 texelSize = 1.0 / vec2(textureSize(Sampler0, 0));
    vec4 color = vec4(0.0);

    // Sample 17x17 grid
    int index = 0;
    for (int y = -8; y <= 8; y++) {
        for (int x = -8; x <= 8; x++) {
            vec2 offset = vec2(float(x), float(y)) * texelSize;
            color += texture(Sampler0, texCoord0 + offset) * weights[index];
            index++;
        }
    }

    // Apply vertex color and ensure proper alpha
    fragColor = vec4(color.rgb * vertexColor.rgb, color.a * vertexColor.a);
}